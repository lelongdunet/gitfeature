#!/bin/bash
#
# Rewrite hook script for feature management

FINALNAMESPACE='final'
DRAFTNAMESPACE='draft'

GITDIR=$(git rev-parse --git-dir)
DEVREF=$(git config workflow.devref)

FEATREBASEDIR=$GITDIR/feat_rebase
COMMITLIST=$(cat)

if [[ "$1" == rebase ]]; then
    if [ -f "$FEATREBASEDIR/integration" ]; then
        #Integration
        FEATURE="$(<"$FEATREBASEDIR/integration")"
        echo "Ending $FEATURE integration"
        test -n "$FEATURE" || exit
        git tag '@'$FEATURE"_$(date '+%s')"
        POSTCHECKOUT="$(<"$FEATREBASEDIR/postcheckout")"
        test -n "$POSTCHECKOUT" || exit
        git branch -f "$POSTCHECKOUT" HEAD

    elif [ -f "$FEATREBASEDIR/start" ]; then
        HASHBASE=$(<"$FEATREBASEDIR/hashbase")
        STARTNAME=$(<"$FEATREBASEDIR/start")
        OLDSTART=$(git rev-parse $STARTNAME)
        #Get SHA-1 of first new commit
        if [ -f "$FEATREBASEDIR/newstart" ]; then
            NEWSTART=$(<"$FEATREBASEDIR/newstart")
        elif [ -f "$FEATREBASEDIR/checkorder" ]; then
            #TODO Check the order of new branch is still the same
            NEWSTART=$(echo -e "$COMMITLIST"|sed "/^$OLDSTART/"'!D;s/^.*\s\(\w*\)$/\1/')
        elif [ "$(git rev-list --count ^HEAD $HASHBASE^)" != 0 ]; then
            FIRST=$(echo -e "$COMMITLIST"|sed '1!D;s/^.*\s\(\w*\)$/\1/')
            NEWSTART="$FIRST^"
        else
            NEWSTART=''
        fi
        if [ -n "$NEWSTART" ]; then
            #Check if new start point is in DEVREF
            DISTANCE=$(git rev-list --count $NEWSTART ^$DEVREF)
            if [ "$DISTANCE" == 0 ]; then
                if git branch -D "$STARTNAME" &> /dev/null; then
                    echo "$STARTNAME not needed any more"
                fi
            else
                git branch -f "$STARTNAME" "$NEWSTART"
                echo "$STARTNAME moved"
                echo "$OLDSTART  -->  $(git rev-parse $NEWSTART)"
            fi
        fi
    fi
fi

$CMDFEATCACHE
